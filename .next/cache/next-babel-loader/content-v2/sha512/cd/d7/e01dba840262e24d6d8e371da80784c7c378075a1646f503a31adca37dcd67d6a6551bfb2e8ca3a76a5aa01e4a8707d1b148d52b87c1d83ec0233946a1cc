{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/qianruzeng/Desktop/Porn/Udemy | React/Section_23_A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\n// import MeetupItem from \"../../components/meetups/MeetupItem\";\n// import { useRouter } from \"next/router\";\n// import { MongoClient, ObjectId } from \"mongodb\";\n// import MeetupDetail from \"../../components/meetups/MeetupDetail\";\n// const DetailPage = (props) => {\n//   const router = useRouter();\n//   const meetupId = router.query.meetupId;\n//   return (\n//     <MeetupDetail\n//       title={props.meetupData.title}\n//       image={props.meetupData.image}\n//       address={props.meetupData.address}\n//       description={props.meetupData.description}\n//     />\n//   );\n// };\n// export const getStaticPath = async () => {\n//   const client = await MongoClient.connect(\n//     \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n//   const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n//   client.close();\n//   return {\n//     fallback: false,\n//     paths: meetups.map((meetup) => ({\n//       params: { meetupId: meetup._id.toString() },\n//     })),\n//   };\n// };\n// export const getStaticProps = async (context) => {\n//   // fetch data for a single meetup\n//   console.log(\"context\", context);\n//   const meetupId = context.params.meetupId;\n//   const client = await MongoClient.connect();\n//   const db = client.db();\n//   const meetupsCollection = await db.collection(\"meetups\");\n//   const selectedMeetup = await meetupsCollection.findOne({\n//     _id: ObjectId(meetupId),\n//   });\n//   return {\n//     props: {\n//       meetupData: {\n//         title: selectedMeetup.title,\n//         image: selectedMeetup.image,\n//         address: selectedMeetup.address,\n//         description: selectedMeetup.description,\n//         id: selectedMeetup._id.toString(),\n//       },\n//     },\n//   };\n// };\n// export default DetailPage;\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/qianruzeng/Desktop/Porn/Udemy | React/Section_23_A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQN,a;;AA4DT,eAAeA,aAAf","sourcesContent":["const mongoDbUrl =\n  \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\";\n\n// import MeetupItem from \"../../components/meetups/MeetupItem\";\n// import { useRouter } from \"next/router\";\n// import { MongoClient, ObjectId } from \"mongodb\";\n// import MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\n// const DetailPage = (props) => {\n//   const router = useRouter();\n//   const meetupId = router.query.meetupId;\n\n//   return (\n//     <MeetupDetail\n//       title={props.meetupData.title}\n//       image={props.meetupData.image}\n//       address={props.meetupData.address}\n//       description={props.meetupData.description}\n//     />\n//   );\n// };\n\n// export const getStaticPath = async () => {\n//   const client = await MongoClient.connect(\n//     \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\"\n//   );\n\n//   const db = client.db();\n\n//   const meetupsCollection = db.collection(\"meetups\");\n\n//   const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n//   client.close();\n\n//   return {\n//     fallback: false,\n//     paths: meetups.map((meetup) => ({\n//       params: { meetupId: meetup._id.toString() },\n//     })),\n//   };\n// };\n\n// export const getStaticProps = async (context) => {\n//   // fetch data for a single meetup\n//   console.log(\"context\", context);\n//   const meetupId = context.params.meetupId;\n\n//   const client = await MongoClient.connect();\n\n//   const db = client.db();\n\n//   const meetupsCollection = await db.collection(\"meetups\");\n\n//   const selectedMeetup = await meetupsCollection.findOne({\n//     _id: ObjectId(meetupId),\n//   });\n\n//   return {\n//     props: {\n//       meetupData: {\n//         title: selectedMeetup.title,\n//         image: selectedMeetup.image,\n//         address: selectedMeetup.address,\n//         description: selectedMeetup.description,\n//         id: selectedMeetup._id.toString(),\n//       },\n//     },\n//   };\n// };\n\n// export default DetailPage;\n\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://maximilian:arlAapzPqFyo4xUk@cluster0.ntrwp.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(mongoDbUrl);\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}