{"ast":null,"code":"import _regeneratorRuntime from \"/Users/qianruzeng/Desktop/Porn/Udemy | React/Section_23_A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/qianruzeng/Desktop/Porn/Udemy | React/Section_23_A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/qianruzeng/Desktop/Porn/Udemy | React/Section_23_A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nvar mongoDbUrl = \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\";\n\nvar DetailPage = function DetailPage(props) {\n  _s();\n\n  var router = useRouter();\n  var meetupId = router.query.meetupId;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DetailPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = DetailPage;\nexport var __N_SSG = true;\nexport var getStaticPath = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var client, db, meetupsCollection, meetups;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return MongoClient.connect(\"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\");\n\n          case 2:\n            client = _context.sent;\n            db = client.db();\n            meetupsCollection = db.collection(\"meetups\");\n            _context.next = 7;\n            return meetupsCollection.find({}, {\n              _id: 1\n            }).toArray();\n\n          case 7:\n            meetups = _context.sent;\n            client.close();\n            return _context.abrupt(\"return\", {\n              fallback: false,\n              paths: meetups.map(function (meetup) {\n                return {\n                  params: {\n                    meetupId: meetup._id.toString()\n                  }\n                };\n              })\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getStaticPath() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default DetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPage\");","map":{"version":3,"sources":["/Users/qianruzeng/Desktop/Porn/Udemy | React/Section_23_A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupItem","useRouter","MongoClient","MeetupDetail","mongoDbUrl","DetailPage","props","router","meetupId","query","meetupData","title","image","address","description","getStaticPath","connect","client","db","meetupsCollection","collection","find","_id","toArray","meetups","close","fallback","paths","map","meetup","params","toString"],"mappings":";;;;;;;;AAAA,OAAOA,UAAP,MAAuB,qCAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,IAAMC,UAAU,GACd,8QADF;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAC5B,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAMO,QAAQ,GAAGD,MAAM,CAACE,KAAP,CAAaD,QAA9B;AAEA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEF,KAAK,CAACI,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEL,KAAK,CAACI,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEN,KAAK,CAACI,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEP,KAAK,CAACI,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAZD;;GAAMT,U;UACWJ,S;;;KADXI,U;;AAcN,OAAO,IAAMU,aAAa;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNb,WAAW,CAACc,OAAZ,CACnB,8QADmB,CADM;;AAAA;AACrBC,YAAAA,MADqB;AAKrBC,YAAAA,EALqB,GAKhBD,MAAM,CAACC,EAAP,EALgB;AAOrBC,YAAAA,iBAPqB,GAODD,EAAE,CAACE,UAAH,CAAc,SAAd,CAPC;AAAA;AAAA,mBASLD,iBAAiB,CAACE,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,cAAAA,GAAG,EAAE;AAAP,aAA3B,EAAuCC,OAAvC,EATK;;AAAA;AASrBC,YAAAA,OATqB;AAW3BP,YAAAA,MAAM,CAACQ,KAAP;AAX2B,6CAapB;AACLC,cAAAA,QAAQ,EAAE,KADL;AAELC,cAAAA,KAAK,EAAEH,OAAO,CAACI,GAAR,CAAY,UAACC,MAAD;AAAA,uBAAa;AAC9BC,kBAAAA,MAAM,EAAE;AAAEtB,oBAAAA,QAAQ,EAAEqB,MAAM,CAACP,GAAP,CAAWS,QAAX;AAAZ;AADsB,iBAAb;AAAA,eAAZ;AAFF,aAboB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbhB,aAAa;AAAA;AAAA;AAAA,GAAnB;AAiDP,eAAeV,UAAf","sourcesContent":["import MeetupItem from \"../../components/meetups/MeetupItem\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst mongoDbUrl =\n  \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\";\n\nconst DetailPage = (props) => {\n  const router = useRouter();\n  const meetupId = router.query.meetupId;\n\n  return (\n    <MeetupDetail\n      title={props.meetupData.title}\n      image={props.meetupData.image}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n};\n\nexport const getStaticPath = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  // fetch data for a single meetup\n  console.log(\"context\", context);\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect();\n\n  const db = client.db();\n\n  const meetupsCollection = await db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  return {\n    props: {\n      meetupData: {\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n        id: selectedMeetup._id.toString(),\n      },\n    },\n  };\n};\n\nexport default DetailPage;\n"]},"metadata":{},"sourceType":"module"}