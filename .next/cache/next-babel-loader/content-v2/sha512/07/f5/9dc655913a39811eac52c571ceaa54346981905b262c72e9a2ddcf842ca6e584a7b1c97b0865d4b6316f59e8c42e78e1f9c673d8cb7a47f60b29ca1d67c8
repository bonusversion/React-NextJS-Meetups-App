{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/qianruzeng/Desktop/Porn/Udemy | React/Section_23_A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nconst mongoDbUrl = \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\";\n\nconst DetailPage = props => {\n  const router = useRouter();\n  const meetupId = router.query.meetupId;\n  return (\n    /*#__PURE__*/\n    // <MeetupDetail\n    //   title={props.meetupData.title}\n    //   image={props.meetupData.image}\n    //   address={props.meetupData.address}\n    //   description={props.meetupData.description}\n    // />\n    _jsxDEV(MeetupDetail, {\n      title: \"f\",\n      image: \"f\",\n      address: \"f\",\n      description: \"f\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  );\n};\n\nexport const getStaticPath = async () => {\n  const client = await MongoClient.connect(\"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  // fetch data for a single meetup\n  console.log(\"context\", context);\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect();\n  const db = client.db();\n  const meetupsCollection = await db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData: {\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n        id: selectedMeetup._id.toString()\n      }\n    }\n  };\n};\nexport default DetailPage;","map":{"version":3,"sources":["/Users/qianruzeng/Desktop/Porn/Udemy | React/Section_23_A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupItem","useRouter","MongoClient","ObjectId","MeetupDetail","mongoDbUrl","DetailPage","props","router","meetupId","query","getStaticPath","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","toString","getStaticProps","context","console","log","selectedMeetup","findOne","meetupData","title","image","address","description","id"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,qCAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,MAAMC,UAAU,GACd,8QADF;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,QAAQ,GAAGD,MAAM,CAACE,KAAP,CAAaD,QAA9B;AAEA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,YAAD;AAAc,MAAA,KAAK,EAAC,GAApB;AAAwB,MAAA,KAAK,EAAC,GAA9B;AAAkC,MAAA,OAAO,EAAC,GAA1C;AAA8C,MAAA,WAAW,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA;AAPF;AASD,CAbD;;AAeA,OAAO,MAAME,aAAa,GAAG,YAAY;AACvC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,8QADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEjB,QAAAA,QAAQ,EAAEgB,MAAM,CAACN,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CAnBM;AAqBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AACA,QAAMpB,QAAQ,GAAGoB,OAAO,CAACH,MAAR,CAAejB,QAAhC;AAEA,QAAMG,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,EAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAhC;AAEA,QAAMgB,cAAc,GAAG,MAAMjB,iBAAiB,CAACkB,OAAlB,CAA0B;AACrDd,IAAAA,GAAG,EAAEhB,QAAQ,CAACM,QAAD;AADwC,GAA1B,CAA7B;AAIA,SAAO;AACLF,IAAAA,KAAK,EAAE;AACL2B,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAEH,cAAc,CAACG,KADZ;AAEVC,QAAAA,KAAK,EAAEJ,cAAc,CAACI,KAFZ;AAGVC,QAAAA,OAAO,EAAEL,cAAc,CAACK,OAHd;AAIVC,QAAAA,WAAW,EAAEN,cAAc,CAACM,WAJlB;AAKVC,QAAAA,EAAE,EAAEP,cAAc,CAACb,GAAf,CAAmBQ,QAAnB;AALM;AADP;AADF,GAAP;AAWD,CA1BM;AA4BP,eAAerB,UAAf","sourcesContent":["import MeetupItem from \"../../components/meetups/MeetupItem\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst mongoDbUrl =\n  \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\";\n\nconst DetailPage = (props) => {\n  const router = useRouter();\n  const meetupId = router.query.meetupId;\n\n  return (\n    // <MeetupDetail\n    //   title={props.meetupData.title}\n    //   image={props.meetupData.image}\n    //   address={props.meetupData.address}\n    //   description={props.meetupData.description}\n    // />\n    <MeetupDetail title=\"f\" image=\"f\" address=\"f\" description=\"f\" />\n  );\n};\n\nexport const getStaticPath = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  // fetch data for a single meetup\n  console.log(\"context\", context);\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect();\n\n  const db = client.db();\n\n  const meetupsCollection = await db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  return {\n    props: {\n      meetupData: {\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n        id: selectedMeetup._id.toString(),\n      },\n    },\n  };\n};\n\nexport default DetailPage;\n"]},"metadata":{},"sourceType":"module"}