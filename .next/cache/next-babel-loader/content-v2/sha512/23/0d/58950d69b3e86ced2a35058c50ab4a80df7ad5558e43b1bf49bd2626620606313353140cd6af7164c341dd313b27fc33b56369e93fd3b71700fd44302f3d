{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/qianruzeng/Desktop/Porn/Udemy | React/Section_23_A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar mongoDbUrl = \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\";\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar DetailPage = function DetailPage(props) {\n  _s();\n\n  var router = useRouter();\n  var meetupId = router.query.meetupId;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DetailPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = DetailPage;\nexport var __N_SSG = true;\nexport default DetailPage; // import { MongoClient, ObjectId } from \"mongodb\";\n// import MeetupDetail from \"../../components/meetups/MeetupDetail\";\n// function MeetupDetails(props) {\n//   return (\n//     <MeetupDetail\n//       image={props.meetupData.image}\n//       title={props.meetupData.title}\n//       address={props.meetupData.address}\n//       description={props.meetupData.description}\n//     />\n//   );\n// }\n// export async function getStaticPaths() {\n//   const client = await MongoClient.connect(mongoDbUrl);\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n//   const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n//   client.close();\n//   return {\n//     fallback: false,\n//     paths: meetups.map((meetup) => ({\n//       params: { meetupId: meetup._id.toString() },\n//     })),\n//   };\n// }\n// export async function getStaticProps(context) {\n//   // fetch data for a single meetup\n//   const meetupId = context.params.meetupId;\n//   const client = await MongoClient.connect(mongoDbUrl);\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n//   const selectedMeetup = await meetupsCollection.findOne({\n//     _id: ObjectId(meetupId),\n//   });\n//   client.close();\n//   return {\n//     props: {\n//       meetupData: {\n//         id: selectedMeetup._id.toString(),\n//         title: selectedMeetup.title,\n//         address: selectedMeetup.address,\n//         image: selectedMeetup.image,\n//         description: selectedMeetup.description,\n//       },\n//     },\n//   };\n// }\n// export default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPage\");","map":{"version":3,"sources":["/Users/qianruzeng/Desktop/Porn/Udemy | React/Section_23_A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["mongoDbUrl","useRouter","MeetupDetail","DetailPage","props","router","meetupId","query","meetupData","title","image","address","description"],"mappings":";;;;;;AAAA,IAAMA,UAAU,GACd,8QADF;AAGA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAC5B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAMK,QAAQ,GAAGD,MAAM,CAACE,KAAP,CAAaD,QAA9B;AAEA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEF,KAAK,CAACI,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEL,KAAK,CAACI,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEN,KAAK,CAACI,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEP,KAAK,CAACI,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAZD;;GAAMT,U;UACWF,S;;;KADXE,U;;AA+DN,eAAeA,UAAf,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["const mongoDbUrl =\n  \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\";\n\nimport { useRouter } from \"next/router\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst DetailPage = (props) => {\n  const router = useRouter();\n  const meetupId = router.query.meetupId;\n\n  return (\n    <MeetupDetail\n      title={props.meetupData.title}\n      image={props.meetupData.image}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb://bonusversion:gaor5WG2A7NcPj0K@cluster0-shard-00-00.gkbnc.mongodb.net:27017,cluster0-shard-00-01.gkbnc.mongodb.net:27017,cluster0-shard-00-02.gkbnc.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-5qtmtj-shard-0&authSource=admin&retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  // fetch data for a single meetup\n  console.log(\"context\", context);\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect();\n\n  const db = client.db();\n\n  const meetupsCollection = await db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  return {\n    props: {\n      meetupData: {\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n        id: selectedMeetup._id.toString(),\n      },\n    },\n  };\n};\n\nexport default DetailPage;\n\n// import { MongoClient, ObjectId } from \"mongodb\";\n\n// import MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\n// function MeetupDetails(props) {\n//   return (\n//     <MeetupDetail\n//       image={props.meetupData.image}\n//       title={props.meetupData.title}\n//       address={props.meetupData.address}\n//       description={props.meetupData.description}\n//     />\n//   );\n// }\n\n// export async function getStaticPaths() {\n//   const client = await MongoClient.connect(mongoDbUrl);\n//   const db = client.db();\n\n//   const meetupsCollection = db.collection(\"meetups\");\n\n//   const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n//   client.close();\n\n//   return {\n//     fallback: false,\n//     paths: meetups.map((meetup) => ({\n//       params: { meetupId: meetup._id.toString() },\n//     })),\n//   };\n// }\n\n// export async function getStaticProps(context) {\n//   // fetch data for a single meetup\n\n//   const meetupId = context.params.meetupId;\n\n//   const client = await MongoClient.connect(mongoDbUrl);\n//   const db = client.db();\n\n//   const meetupsCollection = db.collection(\"meetups\");\n\n//   const selectedMeetup = await meetupsCollection.findOne({\n//     _id: ObjectId(meetupId),\n//   });\n\n//   client.close();\n\n//   return {\n//     props: {\n//       meetupData: {\n//         id: selectedMeetup._id.toString(),\n//         title: selectedMeetup.title,\n//         address: selectedMeetup.address,\n//         image: selectedMeetup.image,\n//         description: selectedMeetup.description,\n//       },\n//     },\n//   };\n// }\n\n// export default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}